// <auto-generated />
using System;
using MailWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MailWeb.Migrations
{
    [DbContext(typeof(MailManagementDbContext))]
    [Migration("20191213071726_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("AspNetCoreWeb.Models.Entities.ClientSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ClientSettings");
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.Entities.MailClientSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Availability");

                    b.Property<string>("BlindCarbonCopies");

                    b.Property<string>("CarbonCopies");

                    b.Property<Guid>("ClientId");

                    b.Property<double>("CreatedTime");

                    b.Property<string>("DisplayName");

                    b.Property<double?>("LastModifiedTime");

                    b.Property<string>("MailHost");

                    b.Property<int>("Timeout");

                    b.Property<string>("UniqueName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UniqueName")
                        .IsUnique();

                    b.ToTable("MailClientSettings");
                });

            modelBuilder.Entity("AspNetCoreWeb.Models.Entities.ClientSetting", b =>
                {
                    b.OwnsOne("AspNetCoreWeb.Models.ValueObjects.MailServiceValueObject", "ActiveMailService", b1 =>
                        {
                            b1.Property<Guid>("ClientSettingId");

                            b1.Property<string>("Name")
                                .HasColumnName("ActiveMailServiceName");

                            b1.Property<string>("Type")
                                .HasColumnName("ActiveMailServiceType");

                            b1.HasKey("ClientSettingId");

                            b1.ToTable("ClientSettings");

                            b1.HasOne("AspNetCoreWeb.Models.Entities.ClientSetting")
                                .WithOne("ActiveMailService")
                                .HasForeignKey("AspNetCoreWeb.Models.ValueObjects.MailServiceValueObject", "ClientSettingId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
