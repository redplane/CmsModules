// <auto-generated />
using System;
using MailWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MailWeb.Migrations
{
    [DbContext(typeof(MailManagementDbContext))]
    partial class MailManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("MailWeb.Models.Entities.BasicMailSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisplayName");

                    b.Property<string>("HostName");

                    b.Property<int>("Port");

                    b.Property<bool>("Ssl");

                    b.Property<int>("Timeout");

                    b.Property<string>("UniqueName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UniqueName")
                        .IsUnique();

                    b.ToTable("BasicMailSettings");
                });

            modelBuilder.Entity("MailWeb.Models.Entities.ClientSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ClientSettings");
                });

            modelBuilder.Entity("MailWeb.Models.Entities.BasicMailSetting", b =>
                {
                    b.OwnsOne("MailWeb.Models.ValueObjects.SmtpCredentialValueObject", "Credential", b1 =>
                        {
                            b1.Property<Guid>("BasicMailSettingId");

                            b1.Property<string>("Password")
                                .HasColumnName("Password");

                            b1.Property<string>("Username")
                                .HasColumnName("Username");

                            b1.HasKey("BasicMailSettingId");

                            b1.ToTable("BasicMailSettings");

                            b1.HasOne("MailWeb.Models.Entities.BasicMailSetting")
                                .WithOne("Credential")
                                .HasForeignKey("MailWeb.Models.ValueObjects.SmtpCredentialValueObject", "BasicMailSettingId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("MailWeb.Models.Entities.ClientSetting", b =>
                {
                    b.OwnsOne("MailWeb.Models.ValueObjects.MailServiceValueObject", "ActiveMailService", b1 =>
                        {
                            b1.Property<Guid>("ClientSettingId");

                            b1.Property<string>("Name")
                                .HasColumnName("ActiveMailServiceName");

                            b1.Property<string>("Type")
                                .HasColumnName("ActiveMailServiceType");

                            b1.HasKey("ClientSettingId");

                            b1.ToTable("ClientSettings");

                            b1.HasOne("MailWeb.Models.Entities.ClientSetting")
                                .WithOne("ActiveMailService")
                                .HasForeignKey("MailWeb.Models.ValueObjects.MailServiceValueObject", "ClientSettingId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
